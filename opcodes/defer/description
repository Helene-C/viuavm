The \instruction{defer} instruction schedules a call to be executed just *after* the frame in
which this instruction is executed is returned from, but before the execution of the enclosing
frame resumes.

For example, if a deferred call to function `foo' is scheduled then the sequence of events is
as follows:

\list{begin}
\item
execute a `defer foo/0' instruction
\item
schedule a call to `foo/0'
\item
encounter `return' instruction
\item
set return value in enclosing frame
\item
suspend current stack (let's call it S)
\item
execute all deferred calls (the process will execute all the deferred functions to
completion, with the last deferred call being executed first)
\item
resume stack S
\item
pop the frame for `bar/0' function
\list{end}

Note that deferred calls can also contain \instruction{defer} instructions and
schedule their own deferred calls.
There is no limit on the nesting of deferred calls.
