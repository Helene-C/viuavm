{"status": "closed", "open.author.name": "Marek Marecki", "open.author.email": "marejm@ozro.pw", "open.timestamp": 1492880255.430824, "message": "Improve type safety during operand fetching\n\nUse fetch_object_of<>() to do it.\n\nThis requires that every type has the 'static const std::string type_name' attribute\nthat can be resolved to its generic type name at compile time.\n\nMore complex types (for higher-level languages) would be stored\nin 'const std::string conrete_type_name' in each object?\nI don't like to think that Viua would force type erasure like JVM does.\nSo maybe it should be:\n\n- `generic_type_name`: e.g. `std::vector`\n- `concrete_type_name`: e.g. `std::vector<int>`\n\nThis way all the information would be retained for runtime.\nAnd since the VM needs the generic types (e.g. pointer, vector, etc.) the \"generic\" name\nwould be enough.\n\nTo sum up.\nTwo pieces of information are required for values: their generic type, and their concrete type.", "tags": ["viuavm"], "milestones": [], "project.tag": "viuavm", "project.name": "Viua Virtual Machine", "close.author.name": "Marek Marecki", "close.author.email": "marejm@ozro.pw", "close.timestamp": 1492884858.855945, "closing_git_commit": "90f5615cdebc32e5d3b0115cd5a00da6c370f99c"}